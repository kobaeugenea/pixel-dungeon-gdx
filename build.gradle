buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://github.com/steffenschaefer/gwt-gradle-plugin/raw/maven-repo/' }
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.4'
        classpath 'com.android.tools.build:gradle:0.12.2'
        classpath 'com.github.jtakakura:gradle-robovm-plugin:0.0.10'
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.7.1c'
    ext {
        versionCode = 59
        appName = 'pixel-dungeon'
	    appTitle = 'Pixel Dungeon'
	    appId = 'com.watabou.pixeldungeon'
        gdxVersion = '1.9.9'
        roboVMVersion = '0.0.14'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-controllers-desktop:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-controllers-platform:$gdxVersion:natives-desktop"
    }
}

project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        compile "com.badlogicgames.gdx:gdx-controllers:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-controllers-android:$gdxVersion"
    }
}

project(":ios") {
    apply plugin: "java"
    apply plugin: "robovm"

    configurations { natives }

    dependencies {
        compile project(":core")
        compile "org.robovm:robovm-rt:${roboVMVersion}"
        compile "org.robovm:robovm-cocoatouch:${roboVMVersion}"
        compile "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
    }
}

project(":html") {
    apply plugin: "gwt"
    apply plugin: "war"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
        compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
        compile "com.badlogicgames.gdx:gdx-controllers:$gdxVersion:sources"
        compile "com.badlogicgames.gdx:gdx-controllers-gwt:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-controllers-gwt:$gdxVersion:sources"
    }
}

project(":core") {
    apply plugin: "java"


    dependencies {
	    compile project(":PD-classes")
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-controllers:$gdxVersion"
    }
}

project(":PD-classes") {
    apply plugin: "java"


    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-controllers:$gdxVersion"
	    compile "org.json:json:20140107"
    }
}

tasks.eclipse.doLast {
    delete ".project"
}

idea {
    project {
        jdkName = "Android API $androidSdkVersion Platform"
        languageLevel = '1.6'
    }
}


idea.workspace.iws.withXml { provider ->
    def node = provider.asNode().'component'.find{ it.@name == 'RunManager' }
    def parser = new XmlParser()
    node?.append(parser.parseText('<configuration name="Android" type="AndroidRunConfigurationType" factoryName="Android App" activateToolWindowBeforeRun="false">\n' +
            '      <module name="android" />\n' +
            '      <option name="DEPLOY" value="true" />\n' +
            '      <option name="ARTIFACT_NAME" value="" />\n' +
            '      <option name="PM_INSTALL_OPTIONS" value="" />\n' +
            '      <option name="ACTIVITY_EXTRA_FLAGS" value="" />\n' +
            '      <option name="MODE" value="default_activity" />\n' +
            '      <option name="CLEAR_LOGCAT" value="false" />\n' +
            '      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="false" />\n' +
            '      <option name="SKIP_NOOP_APK_INSTALLATIONS" value="true" />\n' +
            '      <option name="FORCE_STOP_RUNNING_APP" value="true" />\n' +
            '      <option name="TARGET_SELECTION_MODE" value="SHOW_DIALOG" />\n' +
            '      <option name="USE_LAST_SELECTED_DEVICE" value="false" />\n' +
            '      <option name="PREFERRED_AVD" value="" />\n' +
            '      <option name="DEBUGGER_TYPE" value="Java" />\n' +
            '      <Java />\n' +
            '      <Profilers>\n' +
            '        <option name="ADVANCED_PROFILING_ENABLED" value="false" />\n' +
            '      </Profilers>\n' +
            '      <option name="DEEP_LINK" value="" />\n' +
            '      <option name="ACTIVITY_CLASS" value="" />\n' +
            '      <method v="2">\n' +
            '        <option name="Gradle.BeforeRunTask" enabled="true" tasks="android:installDebug" externalProjectPath="$PROJECT_DIR$" vmOptions="" scriptParameters="" />\n' +
            '      </method>\n' +
            '</configuration>'))
    node?.append(parser.parseText('<configuration name="Desktop" type="GradleRunConfiguration" factoryName="Gradle">\n' +
            '      <ExternalSystemSettings>\n' +
            '        <option name="executionName" />\n' +
            '        <option name="externalProjectPath" value="$PROJECT_DIR$" />\n' +
            '        <option name="externalSystemIdString" value="GRADLE" />\n' +
            '        <option name="scriptParameters" value="" />\n' +
            '        <option name="taskDescriptions">\n' +
            '          <list />\n' +
            '        </option>\n' +
            '        <option name="taskNames">\n' +
            '          <list>\n' +
            '            <option value="desktop:run" />\n' +
            '          </list>\n' +
            '        </option>\n' +
            '        <option name="vmOptions" value="" />\n' +
            '      </ExternalSystemSettings>\n' +
            '      <GradleScriptDebugEnabled>true</GradleScriptDebugEnabled>\n' +
            '      <method v="2" />\n' +
            '</configuration>'))
    node?.append(parser.parseText('<configuration name="Update dependencies" type="GradleRunConfiguration" factoryName="Gradle">\n' +
            '      <ExternalSystemSettings>\n' +
            '        <option name="executionName" />\n' +
            '        <option name="externalProjectPath" value="$PROJECT_DIR$" />\n' +
            '        <option name="externalSystemIdString" value="GRADLE" />\n' +
            '        <option name="scriptParameters" value="" />\n' +
            '        <option name="taskDescriptions">\n' +
            '          <list />\n' +
            '        </option>\n' +
            '        <option name="taskNames">\n' +
            '          <list>\n' +
            '            <option value="idea" />\n' +
            '          </list>\n' +
            '        </option>\n' +
            '        <option name="vmOptions" value="" />\n' +
            '      </ExternalSystemSettings>\n' +
            '      <GradleScriptDebugEnabled>true</GradleScriptDebugEnabled>\n' +
            '      <method v="2" />\n' +
            '</configuration>'))
}